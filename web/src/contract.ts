export const DAO_CODE =
  "60e060405234801561001057600080fd5b5060405161183d38038061183d83398101604081905261002f9161050e565b6001600160a01b03861661008a5760405162461bcd60e51b815260206004820152601560248201527f496e76616c696420746f6b656e2061646472657373000000000000000000000060448201526064015b60405180910390fd5b6001600160a01b0385166100e05760405162461bcd60e51b815260206004820152601860248201527f496e76616c6964207665726966696572206164647265737300000000000000006044820152606401610081565b6001600160a01b0380871660a052851660c05260006100ff858261068f565b50426001553360805260408051600481526024810182526020810180516001600160e01b0316632828e43560e21b179052905160009182916001600160a01b0385169161014b9161074d565b6000604051808303816000865af19150503d8060008114610188576040519150601f19603f3d011682016040523d82523d6000602084013e61018d565b606091505b5091509150816101df5760405162461bcd60e51b815260206004820152601b60248201527f43616c6c20746f207665726966794e657744616f206661696c656400000000006044820152606401610081565b6101f46001600160a01b038916333088610201565b50505050505050506107be565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b039081166323b872dd60e01b1790915261025f91869161026516565b50505050565b6040805180820190915260208082527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564908201526000906102b2906001600160a01b038516908490610334565b80519091501561032f57808060200190518101906102d09190610769565b61032f5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610081565b505050565b6060610343848460008561034d565b90505b9392505050565b6060824710156103ae5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610081565b6001600160a01b0385163b6104055760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610081565b600080866001600160a01b03168587604051610421919061074d565b60006040518083038185875af1925050503d806000811461045e576040519150601f19603f3d011682016040523d82523d6000602084013e610463565b606091505b50909250905061047482828661047f565b979650505050505050565b6060831561048e575081610346565b82511561049e5782518084602001fd5b8160405162461bcd60e51b8152600401610081919061078b565b80516001600160a01b03811681146104cf57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156105055781810151838201526020016104ed565b50506000910152565b60008060008060008060c0878903121561052757600080fd5b610530876104b8565b955061053e602088016104b8565b60408801519095506001600160401b0381111561055a57600080fd5b8701601f8101891361056b57600080fd5b80516001600160401b03811115610584576105846104d4565b604051601f8201601f19908116603f011681016001600160401b03811182821017156105b2576105b26104d4565b6040528181528282016020018b10156105ca57600080fd5b6105db8260208301602086016104ea565b60608a015160808b0151919750955093506105fb91505060a088016104b8565b90509295509295509295565b600181811c9082168061061b57607f821691505b60208210810361063b57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561032f57806000526020600020601f840160051c810160208510156106685750805b601f840160051c820191505b818110156106885760008155600101610674565b5050505050565b81516001600160401b038111156106a8576106a86104d4565b6106bc816106b68454610607565b84610641565b6020601f8211600181146106f057600083156106d85750848201515b600019600385901b1c1916600184901b178455610688565b600084815260208120601f198516915b828110156107205787850151825560209485019460019092019101610700565b508482101561073e5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000825161075f8184602087016104ea565b9190910192915050565b60006020828403121561077b57600080fd5b8151801515811461034657600080fd5b60208152600082518060208401526107aa8160408501602087016104ea565b601f01601f19169190910160400192915050565b60805160a05160c05161102761081660003960008181609d01528181610473015261062901526000818161015c01528181610248015281816102bd015261055c015260008181610135015261021e01526110276000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101305780639d76ea5814610157578063c777ffa61461017e578063f5baf0d714610187578063fea8cb131461019c57600080fd5b806318bdffbb14610098578063196b29f7146100dc57806343d726d6146100f3578063642f2eaf146100fd575b600080fd5b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e560025481565b6040519081526020016100d3565b6100fb6101af565b005b61012061010b366004610d20565b60036020526000908152604090205460ff1681565b60405190151581526020016100d3565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6100bf7f000000000000000000000000000000000000000000000000000000000000000081565b6100e560015481565b61018f6102e6565b6040516100d39190610d5d565b6100fb6101aa366004610da6565b610374565b426002546001546101c09190610ea7565b106102055760405162461bcd60e51b815260206004820152601060248201526f10d85b9b9bdd0818db1bdcd9481e595d60821b60448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526102e4907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa15801561028f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b39190610eba565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691906105ce565b565b600080546102f390610ed3565b80601f016020809104026020016040519081016040528092919081815260200182805461031f90610ed3565b801561036c5780601f106103415761010080835404028352916020019161036c565b820191906000526020600020905b81548152906001019060200180831161034f57829003601f168201915b505050505081565b6001600160a01b0384166103ca5760405162461bcd60e51b815260206004820152601960248201527f496e76616c696420726563697069656e7420616464726573730000000000000060448201526064016101fc565b6000831161041a5760405162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f60448201526064016101fc565b604080516001600160a01b03861660208201529081018490523060608201526080810183905260009060a0016040516020818303038152906040528051906020012090506104688183610625565b6104718261066e565b7f00000000000000000000000000000000000000000000000000000000000000006040516020016104a3929190610f0d565b604051602081830303815290604052906104d05760405162461bcd60e51b81526004016101fc9190610d5d565b5060008181526003602052604090205460ff16156105305760405162461bcd60e51b815260206004820152601860248201527f5472616e73616374696f6e20616c72656164792075736564000000000000000060448201526064016101fc565b6000818152600360205260409020805460ff191660019081179091554290556105836001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001686866105ce565b60408051858152602081018590526001600160a01b038716917f576e589eb075fc65d7a6a1fa09730fc489d9f53473fcd89ef014b997c2f03e0f910160405180910390a25050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526106209084906107c4565b505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031661065b8484610896565b6001600160a01b03161490505b92915050565b604080518082018252601081526f181899199a1a9b1b9c1cb0b131b232b360811b6020820152815182815260608181018452926000919060208201818036833701905050905060005b60208110156107bc578260048683602081106106d5576106d5610f70565b1a60f81b6001600160f81b031916901c60f81c60ff16815181106106fb576106fb610f70565b01602001516001600160f81b03191682610716836002610f86565b8151811061072657610726610f70565b60200101906001600160f81b031916908160001a9053508285826020811061075057610750610f70565b825191901a600f1690811061076757610767610f70565b01602001516001600160f81b03191682610782836002610f86565b61078d906001610ea7565b8151811061079d5761079d610f70565b60200101906001600160f81b031916908160001a9053506001016106b7565b509392505050565b6000610819826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108b29092919063ffffffff16565b80519091501561062057808060200190518101906108379190610f9d565b6106205760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101fc565b60008060006108a585856108cb565b915091506107bc81610910565b60606108c18484600085610ac9565b90505b9392505050565b60008082516041036109015760208301516040840151606085015160001a6108f587828585610bfa565b94509450505050610909565b506000905060025b9250929050565b600081600481111561092457610924610fbf565b0361092c5750565b600181600481111561094057610940610fbf565b0361098d5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016101fc565b60028160048111156109a1576109a1610fbf565b036109ee5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016101fc565b6003816004811115610a0257610a02610fbf565b03610a5a5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016101fc565b6004816004811115610a6e57610a6e610fbf565b03610ac65760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016101fc565b50565b606082471015610b2a5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101fc565b6001600160a01b0385163b610b815760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101fc565b600080866001600160a01b03168587604051610b9d9190610fd5565b60006040518083038185875af1925050503d8060008114610bda576040519150601f19603f3d011682016040523d82523d6000602084013e610bdf565b606091505b5091509150610bef828286610ce7565b979650505050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610c315750600090506003610cde565b8460ff16601b14158015610c4957508460ff16601c14155b15610c5a5750600090506004610cde565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610cae573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610cd757600060019250925050610cde565b9150600090505b94509492505050565b60608315610cf65750816108c4565b825115610d065782518084602001fd5b8160405162461bcd60e51b81526004016101fc9190610d5d565b600060208284031215610d3257600080fd5b5035919050565b60005b83811015610d54578181015183820152602001610d3c565b50506000910152565b6020815260008251806020840152610d7c816040850160208701610d39565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610dbc57600080fd5b84356001600160a01b0381168114610dd357600080fd5b93506020850135925060408501359150606085013567ffffffffffffffff811115610dfd57600080fd5b8501601f81018713610e0e57600080fd5b803567ffffffffffffffff811115610e2857610e28610d90565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610e5757610e57610d90565b604052818152828201602001891015610e6f57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b634e487b7160e01b600052601160045260246000fd5b8082018082111561066857610668610e91565b600060208284031215610ecc57600080fd5b5051919050565b600181811c90821680610ee757607f821691505b602082108103610f0757634e487b7160e01b600052602260045260246000fd5b50919050565b6d024b73b30b634b21039b4b3b71d160951b815260008351610f3681600e850160208801610d39565b6801030b2323932b9b9960bd1b600e93909101928301525060609190911b6bffffffffffffffffffffffff19166017820152602b01919050565b634e487b7160e01b600052603260045260246000fd5b808202811582820484141761066857610668610e91565b600060208284031215610faf57600080fd5b815180151581146108c457600080fd5b634e487b7160e01b600052602160045260246000fd5b60008251610fe7818460208701610d39565b919091019291505056fea2646970667358221220449144023047daf5b58418029722349d936102941fd83234923fc86e949edde564736f6c634300081b0033";

export const DAO_ABI = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_verifierAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_manifest",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closeDelay",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "daoRegister",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "dataHash",
        type: "bytes32",
      },
    ],
    name: "TokensSent",
    type: "event",
  },
  {
    inputs: [],
    name: "close",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "closeDelay",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastUsedTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "manifest",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_dataHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "send",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifierAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export const ERC20_ABI = [
  {
    constant: true,
    inputs: [],
    name: "name",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_spender",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "decimals",
    outputs: [
      {
        name: "",
        type: "uint8",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        name: "balance",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "symbol",
    outputs: [
      {
        name: "",
        type: "string",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_owner",
        type: "address",
      },
      {
        name: "_spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    payable: true,
    stateMutability: "payable",
    type: "fallback",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
];

export const TEE = "0xc0c9Da9ca9712eeb438Ec9AbAcAB6F68cE531aC3";
export const REGISTORY_ADDRESS = "0x208048c19a73eDfF3760c1E108D6eb11d813cc92";
export const REGISTORY_ABI = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_xmtpAddress",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_validContractHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "daos",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDaos",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_xmtpAddress",
        type: "address",
      },
    ],
    name: "setXMTPAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "validContractHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "verifyNewDao",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "xmtpAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];
